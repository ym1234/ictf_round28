

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_16 = Integer(16); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_64 = Integer(64)
from Crypto.Util import number

with open("nums.txt", "r") as f:
    y = [Integer(int(z, _sage_const_16 )) for z in f.read().strip().split('\n')]

x = var('x')
flag = b""
for i in range(_sage_const_0 , len(y), _sage_const_2 ):
    flag += number.long_to_bytes(int(solve_mod((x * y[i] + y[i+_sage_const_1 ]) == x, _sage_const_2 **_sage_const_64 )[_sage_const_0 ][_sage_const_0 ]))[::-_sage_const_1 ]
print(flag.decode("utf8"))

